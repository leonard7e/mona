{% macro navigation(pg) %}
{% import _self as nv %}
<nav 
id="mainNavigation" 
ng-controller="MainDropdownNav"
role="navigation" 
>
  <ul>
    {% for p in pg.children.visible %}
    {# Generate a dropdown identity. #}
    {% set dropdownId = (p.menu | replace({'ö': "oe",'Ö': "oe", 'ä': "ae", 'Ä': "ae", 'ü':"ue", 'Ü':"ue", 'ß':"ss"}) | hyphenize) %}
    {{ nv.dropdown_items(p, 0, dropdownId) }}
    {% endfor %}  
  </ul>
</nav>
{% endmacro %}

{% macro dropdown_items(p, depth, dropdownId) %}
{% import _self as nv %}
<li class="{{ nv.menu_type(depth) }}" 
  ng-controller="Dropdown"
  ng-init="init('{{dropdownId}}')"
  >
  {% if p.children.visible.count > 0 %}
    {{ nv.nav_item(p, dropdownId) }} 
    {{ nv.nav_recursion (p, depth, dropdownId )}} 
  {% else %}
    {{ nv.nav_item(p, dropdownId) }}
  {% endif %}
</li>
{% endmacro %}

{% macro nav_recursion(pg, depth, dropdownId) %}
{% import _self as nv %}
{# Limit depth of dropdown menu to 1 #}
{% if depth < 1 %}
  <nav ng-show="doPopup" >
    <div class="navSplit" ></div>
    <ul>
      {% for p in pg.children.visible %}
        {{ nv.dropdown_items(p, depth+1, dropdownId) }}
      {% endfor %}  
    </ul>
  </nav>
{% endif %}
{% endmacro %}

{% macro nav_item(p, dropdownid) %}
<a 
class="navItem" 
href="{{ p.url }}"             
nav-item="'{{dropdownid}}'" 
role="menuitem"
aria-haspopup="true"
tabindex="0"
> 
  {{ p.menu() }} 
</a>
{% endmacro %}

{% macro menu_type(depth) %}
{% if depth == 0 %}
toplevel-menu
{% elseif depth == 1 %}
menu
{% elseif depth == 2 %}
submenu
{% else %}
subsubmenu
{% endif %}
{% endmacro %}
