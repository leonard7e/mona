{% macro navigation(pg) %}
{% import _self as nv %}
<nav
id="mainNavigation"
ng-show="menuOpened()"
ng-controller="DropdownNav"
role="navigation"
>
  <ul>
    {% for p in pg.children.visible %}
    {# Generate a dropdown identity. #}
    {{ nv.dropdown_items(p, 0, loop.index) }}
    {% endfor %}
  </ul>
</nav>
{% endmacro %}

{% set collection = ["blog"] %}

{% macro dropdown_items(p, depth, dropdownId) %}
{% import _self as nv %}
<li class="{{ nv.menu_type(depth) }}"
  ng-class="{Active:isActive({{dropdownId}})}"
  >
  {% if depth >= 1 %}
    {{ nv.nav_item(p, dropdownId) }}
    {# {% if p.children ..... %}{% endif %} #}
  {% else %}
    {{ nv.nav_not_routable(p, dropdownId) }}
    {{ nv.nav_recursion (p, depth, dropdownId )}}
  {% endif %}
</li>
{% endmacro %}

{% macro nav_recursion(pg, depth, dropdownId) %}
{% import _self as nv %}
{# Limit depth of dropdown menu to 1 #}
{% if depth < 1 %}
  <nav
    class="RequireJS"
    ng-cloak
    ng-hide="isActive({{dropdownId}})"
    ng-controller="DropdownNav"
    require-js
    >
    <div class="navSplit" ></div>
    <ul>
      {% for p in pg.children.visible %}
        {{ nv.dropdown_items(p, depth+1, dropdownId) }}
      {% endfor %}
    </ul>
    <div class="navSplit" ></div>
  </nav>
{% endif %}
{% endmacro %}

{% macro nav_not_routable(p, dropdownid) %}
<span
class="navItem"
ng-click="doNavSwitch($event,{{dropdownid}})"
role="menuitem"
aria-haspopup="true"
tabindex="0"
>
{{ p.menu() }}
</span>
{% endmacro %}

{% macro nav_item(p, dropdownid) %}
{% if p.routable %}
  <a
  class="navItem"
  href="{{ p.url }}"
  ng-click="doNavSwitch($event,{{dropdownid}})"
  role="menuitem"
  tabindex="0"
  >
  {{ p.menu() }}
  </a>
{% else %}
  {{ nv.nav_not_routable(p,dropdownid)}}
{% endif %}
{% endmacro %}

{% macro menu_type(depth) %}
{% if depth == 0 %}
toplevel-menu
{% elseif depth == 1 %}
menu
{% elseif depth == 2 %}
submenu
{% else %}
subsubmenu
{% endif %}
{% endmacro %}
